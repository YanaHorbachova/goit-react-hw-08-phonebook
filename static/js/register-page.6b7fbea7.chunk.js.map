{"version":3,"sources":["views/RegisterView.js"],"names":["RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","reset","className","onSubmit","this","type","onChange","Component","connect","dispatch","data","authOperations","register"],"mappings":"8PAMMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKa,S,EAGPA,MAAQ,WACN,EAAKN,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,OACE,qBAAKW,UAAU,eAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAMA,UAAU,OAAOC,SAAUC,KAAKR,aAAtC,UACE,wBAAOM,UAAU,aAAjB,UACE,sBAAMA,UAAU,mBAAhB,kBACA,uBACEA,UAAU,QACVG,KAAK,OACLX,MAAOU,KAAKhB,MAAMC,KAClBiB,SAAUF,KAAKZ,aACfH,KAAK,YAGT,wBAAOa,UAAU,aAAjB,UACE,sBAAMA,UAAU,mBAAhB,oBACA,uBACEA,UAAU,QACVG,KAAK,QACLX,MAAOU,KAAKhB,MAAME,MAClBgB,SAAUF,KAAKZ,aACfH,KAAK,aAGT,wBAAOa,UAAU,aAAjB,UACE,sBAAMA,UAAU,mBAAhB,sBACA,uBACEA,UAAU,QACVG,KAAK,WACLX,MAAOU,KAAKhB,MAAMG,SAClBF,KAAK,WACLiB,SAAUF,KAAKZ,eAEjB,wBAAQU,UAAU,uBAAuBG,KAAK,SAA9C,mC,GAzDaE,aAgFZC,sBAAQ,MAJI,SAACC,GAAD,MAAe,CACxCT,WAAY,SAACU,GAAD,OAAUD,EAASE,IAAeC,SAASF,QAG1CF,CAAkCrB","file":"static/js/register-page.6b7fbea7.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authOperations } from \"../redux/auth\";\nimport PropTypes from \"prop-types\";\nimport \"../components/ContactForm/ContactForm.css\";\n\nclass RegisterView extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"form-wrapper\">\n        <div className=\"form-view\">\n          <form className=\"form\" onSubmit={this.handleSubmit}>\n            <label className=\"form-label\">\n              <span className=\"form-label-title\">Name</span>\n              <input\n                className=\"input\"\n                type=\"text\"\n                value={this.state.name}\n                onChange={this.handleChange}\n                name=\"name\"\n              />\n            </label>\n            <label className=\"form-label\">\n              <span className=\"form-label-title\">E-mail</span>\n              <input\n                className=\"input\"\n                type=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n                name=\"email\"\n              />\n            </label>\n            <label className=\"form-label\">\n              <span className=\"form-label-title\">Password</span>\n              <input\n                className=\"input\"\n                type=\"password\"\n                value={this.state.password}\n                name=\"password\"\n                onChange={this.handleChange}\n              />\n              <button className=\"button button-center\" type=\"submit\">\n                Sign Up\n              </button>\n            </label>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegisterView.propTypes = {\n  onRegister: PropTypes.func.isRequired,\n};\n\n// const mapDispatchToProps = {\n//   onRegister: authOperations.register,\n// };\n\nconst mapDispatchToProps = (dispatch) => ({\n  onRegister: (data) => dispatch(authOperations.register(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}