{"version":3,"sources":["routes.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.svg","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar/AppBar.js","views/NotFoundView.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-reducer.js"],"names":["routes","home","register","login","contacts","getIsAuth","state","auth","isAuth","getUsername","user","name","connect","className","exact","to","activeClassName","mapDispatchToProps","onLogout","authOperations","logout","avatar","defaultAvatar","src","alt","width","type","onClick","AuthNav","NotFoundView","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","LoginView","RegisterView","PhonebookView","App","this","onGetCurrentUser","fallback","color","height","timeout","path","getCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","authReducer","phonebookReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","console","log","ReactDOM","StrictMode","loading","document","getElementById","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","credentials","dispatch","a","post","response","data","message","getState","persistedToken","get","initialUserState","email","createReducer","_","payload","error","addContactRequest","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","phonebookOperations","fetchContacts","then","catch","addContact","contact","deleteContact","contactId","delete","items","filter","id"],"mappings":"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","file":"static/js/main.48ed2aa4.chunk.js","sourcesContent":["const routes = {\n  home: \"/\",\n  register: \"/register\",\n  login: \"/login\",\n  contacts: \"/contacts\",\n};\n\nexport default routes;\n","export const getIsAuth = (state) => state.auth.isAuth;\nexport const getUsername = (state) => state.auth.user.name;\n","import { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport routes from \"../../routes\";\nimport { getIsAuth } from \"../../redux/auth/auth-selectors\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ isAuth }) => {\n  return (\n    <nav className=\"nav\">\n      <NavLink\n        className=\"nav__link\"\n        exact\n        to={routes.home}\n        activeClassName=\"nav__link--active\"\n      >\n        Home\n      </NavLink>\n\n      {isAuth && (\n        <NavLink\n          className=\"nav__link\"\n          exact\n          to={routes.contacts}\n          activeClassName=\"nav__link--active\"\n        >\n          Phonebook\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: getIsAuth(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/default-avatar.a0316acc.svg\";","import { connect } from \"react-redux\";\nimport { getUsername } from \"../../redux/auth/auth-selectors\";\nimport { authOperations } from \"../../redux/auth\";\nimport defaultAvatar from \"./default-avatar.svg\";\nimport \"./UserMenu.css\";\n\nconst UserMenu = ({ name, avatar, onLogout }) => (\n  <div className=\"usermenu\">\n    <div className=\"usermenu-wrapper\">\n      <img src={avatar} alt=\"name\" width=\"32\" />\n      <span className=\"usermenu-text\">Welcome, {name} </span>\n    </div>\n    <button type=\"button\" className=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  name: getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logout,\n};\n// const mapDispatchToProps = dispatch =>({\n//     onLogout: () => dispatch(authOperations.logout()),\n// })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import { NavLink } from \"react-router-dom\";\nimport routes from \"../routes\";\nimport \"../components/Navigation/Navigation.css\";\n\nconst AuthNav = () => {\n  return (\n    <nav className=\"nav authnav\">\n      <NavLink\n        className=\"nav__link\"\n        exact\n        to={routes.register}\n        activeClassName=\"nav__link--active\"\n      >\n        Sign Up\n      </NavLink>\n      <NavLink\n        className=\"nav__link\"\n        exact\n        to={routes.login}\n        activeClassName=\"nav__link--active\"\n      >\n        Login\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default AuthNav;\n","import { connect } from \"react-redux\";\nimport Navigation from \"../Navigation/Navigation\";\nimport UserMenu from \"../UserMenu/UserMenu\";\nimport AuthNav from \"../AuthNav\";\nimport { getIsAuth } from \"../../redux/auth/auth-selectors\";\nimport \"./AppBar.css\";\n\nconst AppBar = ({ isAuth }) => {\n  return (\n    <header className=\"header\">\n      <Navigation />\n      {isAuth ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n\nconst makeStateToProps = (state) => ({\n  isAuth: getIsAuth(state),\n});\n\nexport default connect(makeStateToProps)(AppBar);\n","const NotFoundView = () => <h1>Not Found</h1>;\n\nexport default NotFoundView;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getIsAuth } from \"../redux/auth/auth-selectors\";\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuth,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuth ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuth: getIsAuth(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getIsAuth } from \"../redux/auth/auth-selectors\";\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuth,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuth && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuth: getIsAuth(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import { Component, Suspense, lazy } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport routes from \"./routes\";\nimport AppBar from \"./components/AppBar/AppBar\";\nimport NotFoundView from \"./views/NotFoundView\";\nimport { authOperations } from \"./redux/auth\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport Loader from \"react-loader-spinner\";\nimport \"./styles.css\";\nimport \"./App.css\";\n\nconst HomeView = lazy(() =>\n  import(\"./views/HomeView\" /* webpackChunkName: \"home-page\" */)\n);\n\nconst LoginView = lazy(() =>\n  import(\"./views/LoginView\" /* webpackChunkName: \"login-page\" */)\n);\n\nconst RegisterView = lazy(() =>\n  import(\"./views/RegisterView\" /* webpackChunkName: \"register-page\" */)\n);\n\nconst PhonebookView = lazy(() =>\n  import(\"./views/PhonebookView\" /* webpackChunkName: \"phonebook-page\" */)\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <AppBar />\n        <Suspense\n          fallback={\n            <Loader\n              className=\"Loader\"\n              type=\"ThreeDots\"\n              color=\"#9098a3\"\n              height={50}\n              width={50}\n              timeout={3000}\n            />\n          }\n        >\n          <Switch>\n            <Route exact path={routes.home} component={HomeView} />\n            <PublicRoute\n              path={routes.register}\n              restricted\n              redirectTo={routes.contacts}\n              component={RegisterView}\n            />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              redirectTo={routes.contacts}\n              component={LoginView}\n            />\n            <PrivateRoute\n              path={routes.contacts}\n              redirectTo={routes.login}\n              component={PhonebookView}\n            />\n            <Route component={NotFoundView} />\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { phonebookReducer } from \"./phonebook/\";\nimport { authReducer } from \"./auth\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(contactsPersistConfig, phonebookReducer),\n// });\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst rootReducer = combineReducers({\n  auth: persistReducer(authPersistConfig, authReducer),\n  contacts: phonebookReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  // devTools: true,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store } from \"./redux/store\";\nimport { persistor } from \"./redux/store\";\n\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const registerRequest = createAction(\"auth/registerRequest\");\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\nexport const registerError = createAction(\"auth/registerError\");\n\nexport const loginRequest = createAction(\"auth/loginRequest\");\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\nexport const loginError = createAction(\"auth/loginError\");\n\nexport const logoutRequest = createAction(\"auth/logoutRequest\");\nexport const logoutSuccess = createAction(\"auth/logoutSuccess\");\nexport const logoutError = createAction(\"auth/logoutError\");\n\nexport const getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nexport const getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nexport const getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n","import axios from \"axios\";\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n    token.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\nconst login = (credentials) => async (dispatch) => {\n  dispatch(loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\nconst logout = () => async (dispatch) => {\n  dispatch(logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n  try {\n    const response = await axios.get(\"/users/current\");\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n\nconst authOperations = { register, login, logout, getCurrentUser };\n\nexport default authOperations;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logoutError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuth = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n  [logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuth,\n  token,\n  error,\n});\n","import { createAction } from \"@reduxjs/toolkit\";\n\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\nexport const fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nexport const deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n    dispatch(fetchContactsRequest());\r\n  \r\n    axios\r\n      .get(\"/contacts\")\r\n      .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n      .catch((error) => dispatch(fetchContactsError(error.message)));\r\n  };\r\n  \r\n  const addContact = (contact) => (dispatch) => {\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error.message)));\r\n  };\r\n  \r\n  const deleteContact = (contactId) => (dispatch) => {\r\n    dispatch(deleteContactRequest());\r\n  \r\n    axios\r\n      .delete(`/contacts/${contactId}`)\r\n      .then(() => dispatch(deleteContactSuccess(contactId)))\r\n      .catch((error) => dispatch(deleteContactError(error.message)));\r\n  };\r\n\r\n\r\nconst phonebookOperations = { fetchContacts, addContact, deleteContact };\r\n\r\nexport default phonebookOperations;","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./phonebook-actions\";\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});"],"sourceRoot":""}